plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id "org.sonarqube" version "3.4.0.2513"
    id "jacoco"
}

sonarqube {
    properties {
        property "sonar.projectKey", "Frankarrot_backend_AYMmN1SPbvrwls5h6iw0"
    }
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.4.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
    finalizedBy 'jacocoTestReport'
}

tasks.named('asciidoctor') {
    configurations 'asciidoctorExt'
    sources {
        include("**/index.adoc", "**/common/*.adoc")
    }
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir

    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task createDocument(type: Copy) {
    dependsOn asciidoctor

    from file("build/docs/asciidoc")
    into file("src/main/resources/static")
}

task displaceDocument(type: Copy) {
    dependsOn asciidoctor

    from("${asciidoctor.outputDir}")
    into("build/resources/main/static")
}

bootJar {
    dependsOn createDocument
    dependsOn displaceDocument
}

jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
